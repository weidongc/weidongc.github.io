<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>hexo优化-利用gulp压缩代码</title>
      <link href="/post/6861cde8.html"/>
      <url>/post/6861cde8.html</url>
      <content type="html"><![CDATA[<blockquote><p>npm install gulp@next -g  # gulp4.0 应为gulp-debug需要gulp版本大于等于4.0</p></blockquote><blockquote><p>npm install –save-dev gulp-debug</p></blockquote><blockquote><p>npm install –save-dev gulp-clean-css</p><p>npm install –save-dev gulp-uglify</p><p>npm install –save-dev gulp-htmlmin</p><p>npm install –save-dev gulp-htmlclean</p><p>npm install –save-dev gulp-imagemin</p><p>npm install –save-dev gulp-changed</p><p>npm install –save-dev gulp-if</p><p>npm install –save-dev gulp-plumber</p><p>npm install –save-dev run-sequence</p><p>npm install –save-dev del</p></blockquote><p><a href="https://blog.wearewizards.io/migrating-to-gulp-4-by-example" target="_blank" rel="noopener">通过示例迁移到gulp 4</a><br><a href="https://segmentfault.com/a/1190000005357048" target="_blank" rel="noopener">【译】相对完整的Gulp4升级指南</a><br><a href="https://blog.csdn.net/jianjianjianjiande/article/details/79048778" target="_blank" rel="noopener">走进gulp4的世界</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.series</span>：将按顺序运行任务</span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.parallel</span>：将并行运行任务</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> gulp </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hexo使用入门</title>
      <link href="/post/1476ebdb.html"/>
      <url>/post/1476ebdb.html</url>
      <content type="html"><![CDATA[<p>Hexo博客搭建的基础大致流程为： </p><ul><li>安装Node.js → 安装Hexo → 本地测试运行 → 安装及配置主题 →安装Git → 注册github与coding并创建pages仓库 → 部署 </li><li>Node.js和git的安装大家自己去网上搜下，相关的文章很多<a id="more"></a><h2 id="Hexo安装和配置"><a href="#Hexo安装和配置" class="headerlink" title="Hexo安装和配置"></a>Hexo安装和配置</h2></li></ul><h4 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h4><p>在终端执行以下命令通过npm安装Hexo(这里有个前提是你的电脑node环境已经装好)</p><blockquote><p>npm install -g hexo-cli </p></blockquote><h4 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h4><p>Hexo安装完成后,先提前建好一个文件夹用来做我们博客项目的文件夹。比如我这里在用户主目录下建了一个hexo文件夹，里面建了一个blog文件夹。</p><p>在blog文件夹中打开终端，或者通关cd命令进入blog这个目录</p><blockquote><p>cd hexo/blog</p><p><img src="http://wdcblog.oss-cn-hongkong.aliyuncs.com/blog/1.png" alt=""></p></blockquote><p>执行命令：</p><blockquote><p>hexo init        # hexo会在当前文件夹建立网站所需要的所有文件</p><p>npm install        # 安装依赖模块</p></blockquote><p>新建完成后，blog文件夹目录结构如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span></span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>启动hexo本地站点，并开启调试模式（即加上 –debug），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误</p><blockquote><p>hexo s -d        # 等同于hexo server –debug，在本地服务器运行</p><p><img src="1476ebdb/2.png" alt=""></p></blockquote><p>然后打开浏览器输入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a>。可以看到如下界面：<br><img src="1476ebdb/3.png" alt=""></p><h4 id="新建页面和文章"><a href="#新建页面和文章" class="headerlink" title="新建页面和文章"></a>新建页面和文章</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"title"</span>  # 生成新文章：\source\_posts\title.md</span><br><span class="line">hexo new<span class="built_in"> page </span><span class="string">"title"</span>  # 生成新的页面，后面可在主题配置文件中配置页面</span><br></pre></td></tr></table></figure><p>生成文章或页面的模板放在博客文件夹根目录下的 scaffolds/ 文件夹里面，文章对应的是 post.md ，页面对应的是page.md，草稿的是draft.md</p><h4 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h4><p>打开新建的文章\source_posts\postName.md，其中postName是hexo new “title”中的title</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">postName</span>  <span class="comment"># 文章页面上的显示名称，可以任意修改，不会出现在URL中</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-8</span><span class="bullet">-6</span> <span class="number">23</span><span class="string">:49:28</span>  <span class="comment"># 文章生成时间，一般不改</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">diary</span>  <span class="comment"># 文章分类目录，多个分类使用[a,b,c]这种格式</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[Hexo,diary]</span>  <span class="comment"># 文章标签</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#这里开始使用markdown格式输入你的正文。</span></span><br><span class="line"><span class="string">&lt;!--more--&gt;</span> </span><br><span class="line"><span class="comment">#more标签以下的内容要点击“阅读全文”才能看见，#more标签以上的内容为你首页显示文章的摘要部分</span></span><br></pre></td></tr></table></figure><h4 id="MD文章编辑"><a href="#MD文章编辑" class="headerlink" title="MD文章编辑"></a>MD文章编辑</h4><p>如果你对MD语法不熟悉，推荐你去马克飞象使用它的在线网页编辑，可以实现一边打字一边查看效果，很方便。<br>地址：<a href="https://maxiang.io/" target="_blank" rel="noopener">https://maxiang.io/</a><br>我这里用的mac的MacDown编辑，类似的软件还有 Mou 、Typora</p><p>到这里hexo就算是安装好了，接下来就是一些详细的配置了。</p><h4 id="常用命令总结"><a href="#常用命令总结" class="headerlink" title="常用命令总结"></a>常用命令总结</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder] # 初始化一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站</span><br><span class="line">hexo new [layout] &lt;title&gt; # 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来</span><br><span class="line">hexo version # 查看版本</span><br><span class="line">hexo clean # 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span><br><span class="line">hexo g # 等于hexo generate # 生成静态文件</span><br><span class="line">hexo s # 等于hexo server # 本地预览</span><br><span class="line">hexo d # 等于hexo deploy # 部署，可与hexo g合并为 hexo d -g</span><br></pre></td></tr></table></figure><hr><h4 id="博文插入图片"><a href="#博文插入图片" class="headerlink" title="博文插入图片"></a>博文插入图片</h4><p>1.首先确认站点配置文件_config.yml 中有 post_asset_folder:true。<br>Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder<br>当您设置post_asset_folder为true参数后，在建立文件时，Hexo<br>会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。<br><img src="1476ebdb/4.png" alt=""></p><p>2.在hexo的目录下执行<code>npm install hexo-asset-image --save</code></p><p>3.完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。</p><p>比如我这里新建一篇文章 执行：<code>hexo new &quot;Hexo使用入门&quot;</code> 就会在我的source/_posts目录下生成 <em>Hexo使用入门.md</em> 文件 和 <em>Hexo使用入门</em> 文件夹，将我们这篇文章要用到的图片放入该文件夹就行了</p><p><img src="1476ebdb/5.png" alt=""></p><p>需要引入某张图片，就这样写 <strong><code>![](Hexo使用入门/5.png)</code></strong></p><p>这里有一个<em>坑</em>，如果同时使用了<code>hexo-abbrlink</code>插件做了链接持久化的话,引用图片就需要这样写：<code>{% asset_img slug [title] %}</code> , 比如上面的引用5.png，就写成</p><blockquote>{% asset_img 5.png %}</blockquote><p><em>备注：这种方式本地直接打开文件显示不了突破，本人还是推荐使用cdn的方式存图片，方便放在其他博客，还可以减少请求压力。<b><a href="https://promotion.aliyun.com/ntms/yunparter/invite.html?userCode=cfiifl30" target="_blank" rel="noopener">阿里云oss</a>、<a href="https://portal.qiniu.com/signup?code=3ll21h6a9q636" target="_blank" rel="noopener">七牛云</a></b> 等</em></p><hr><h2 id="Hexo-Next主题安装与配置"><a href="#Hexo-Next主题安装与配置" class="headerlink" title="Hexo Next主题安装与配置"></a><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Hexo Next主题安装与配置</a></h2><p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p><blockquote><p>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p></blockquote><p>编辑站点配置文件 _config.yml ，找到 theme 字段，并将其值更改为 next。</p><blockquote><p>theme: next    # 当前主题名称。值为false时禁用主题</p></blockquote><p>这里如果<code>git clone</code>太慢的话，可以看看 <a href="18bf4a5.html">git clone太慢解决方式</a></p><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好先使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p><h3 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h3><hr><h4 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h4><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><p>Scheme 的切换通过更改 <strong>主题配置</strong> 文件<code>themes/next/_config.yml</code>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。</p><hr><h4 id="设置站点首页不显示文章全文"><a href="#设置站点首页不显示文章全文" class="headerlink" title="设置站点首页不显示文章全文"></a>设置站点首页不显示文章全文</h4><p>打开 <strong>主题配置文件</strong> _config.yml 文件，注意不是站点配置文件，该文件在对应主题文件夹下。找到如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use <span class="comment">&lt;!-- more --&gt;</span> in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true#默认为false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>把这里的false改为true就可以了在首页启动显示文章预览了，length是显示预览的长度。</p><p>这里我们可以通过在文章使用<!-- more -->标志来精确控制文章的摘要预览，比如这篇文章就是在这个段落的末尾添加了该标志，所以本文在首页的预览就会显示到这个段落为止。 </p><p>强烈推荐使用该<!-- more -->标志来控制文章的摘要预览，因为这种方式可以让摘要也按照css文件中的样式来渲染。如果使用了自动摘要的功能，你会发现文章摘要是一大团没有样式的文本，很是难看。</p><h5 id="其他的文章配置（字数统计、阅读时长）"><a href="#其他的文章配置（字数统计、阅读时长）" class="headerlink" title="其他的文章配置（字数统计、阅读时长）"></a>其他的文章配置（字数统计、阅读时长）</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></span><br><span class="line"><span class="comment"># 自动将页面滚动到&lt;!-- more --&gt;标记下的地方。</span></span><br><span class="line"><span class="attr">scroll_to_more:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically saving scroll position on each post/page in cookies.</span></span><br><span class="line"><span class="comment"># 自动保存每篇文章或页面上一次滚动的地方。</span></span><br><span class="line"><span class="attr">save_scroll:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="comment"># 自动在首页对文章进行摘要描述作为前言文本。</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="comment"># 不推荐使用自动摘要。</span></span><br><span class="line"><span class="comment"># 请在文章中使用&lt;!-- more --&gt;标志来精确控制摘要长度。</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="comment"># 文章元数据展示设置</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="comment"># 文本显示</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 创建时间</span></span><br><span class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 更新时间</span></span><br><span class="line">  <span class="comment"># 这个更新时间有点问题，因为每次重新生成文章/部署时都会刷新更新时间，不建议使用</span></span><br><span class="line"><span class="attr">  updated_at:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 目录分类</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="comment"># 文章字数展示设置</span></span><br><span class="line"><span class="comment"># 显示统计字数和估计阅读时长</span></span><br><span class="line"><span class="comment"># 注意：这个要安装插件，先进入站点文件夹根目录</span></span><br><span class="line"><span class="comment"># 然后：npm install hexo-wordcount --save</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="comment"># 文本显示</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 文章字数统计</span></span><br><span class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 阅读时长</span></span><br><span class="line"><span class="attr">  min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 站点总字数统计</span></span><br><span class="line"><span class="attr">  totalcount:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 该post_wordcount的所有设置另起一行显示</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>上面的字数统计和估计阅读时长需要安装<code>hexo-wordcount</code>插件，执行</p><blockquote><p>npm install hexo-wordcount –save</p></blockquote><hr><h4 id="添加链接持久化"><a href="#添加链接持久化" class="headerlink" title="添加链接持久化"></a>添加链接持久化</h4><p>hexo默认的链接是<a href="http://xxx.yy.com/2013/07/14/hello-world这种类型的，这源于站点配置文件_config.yml里的配置:permalink" target="_blank" rel="noopener">http://xxx.yy.com/2013/07/14/hello-world这种类型的，这源于站点配置文件_config.yml里的配置:permalink</a>: :year/:month/:day/:title/.这种默认配置的缺点就是当我们创建的博文名包含中文的名的时候，url链接地址经常会变成一串很长的难以理解的字符串，不利于博文的链接分享，以及搜索引擎搜索，另外就是年月日都会有分隔符。我们可以让url链接持久化来解决这个问。</p><ol><li><p>安装<code>hexo-abbrlink</code>插件</p><blockquote><p>npm install hexo-abbrlink –save</p></blockquote></li><li><p>修改<strong>站点配置文件</strong> _config.yml</p><ul><li><p>permalink: post/:abbrlink.html</p></li><li><p>添加 abbrlink:</p></li></ul></li></ol><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">permalink:</span> post/:abbrlink.html  <span class="meta"># :year/:month/:day/:title/     # 文章的永久链接格式</span></span><br><span class="line"><span class="symbol">permalink_defaults:</span>     <span class="meta"># 永久链接中个部分的默认值</span></span><br><span class="line"><span class="meta"># abbrlink config 需安装插件hexo-abbrlink</span></span><br><span class="line"><span class="symbol">abbrlink:</span></span><br><span class="line"><span class="symbol">  alg:</span> crc32  <span class="meta"># 算法： crc16(default) and crc32</span></span><br><span class="line"><span class="symbol">  rep:</span> hex    <span class="meta"># 进制： dec(default) and hex</span></span><br></pre></td></tr></table></figure><hr><h4 id="添加百度分享"><a href="#添加百度分享" class="headerlink" title="添加百度分享"></a>添加百度分享</h4><p>修改 <strong>主题配置文件</strong> <code>_config.yml</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">baidushare:</span></span><br><span class="line"><span class="symbol">  type:</span> slide  <span class="meta">#还有一个值是button是显示在文章最后的一排小图标按钮，有点丑，可以自己试试看</span></span><br></pre></td></tr></table></figure><hr><h4 id="添加站内搜索功能"><a href="#添加站内搜索功能" class="headerlink" title="添加站内搜索功能"></a>添加站内搜索功能</h4><ul><li><p>安装 hexo-generator-search 插件 </p><blockquote><p>$ npm install hexo-generator-search –save</p></blockquote></li><li><p>配置站点文件_config.yml:</p>  <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 站内搜索</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br></pre></td></tr></table></figure></li><li><p>配置主题文件_config.yml:</p>  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="添加阅读次数统计"><a href="#添加阅读次数统计" class="headerlink" title="添加阅读次数统计"></a>添加阅读次数统计</h4><p>参考 <a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="noopener">这里</a> 写得很详细（主要还是因为我懒）</p><hr><p>还有一些修改没写。留着有时间再来写吧。。。<br>添加百度统计，codingpage、来必应评论、阿里云oss图片云储存<br>同步到Github，域名解析</p><hr><p>参考链接：</p><ul><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网</a> 写得很详细</li><li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a></li><li><a href="http://www.cduyzh.com/hexo-settings-1/" target="_blank" rel="noopener">2017年最新基于hexo搭建个人免费博客——从零开始</a></li><li><a href="https://cherryblog.site/tags/Hexo/" target="_blank" rel="noopener">Cherry’s Blog</a></li><li><a href="https://blog.csdn.net/lewky_liu/article/details/81149069" target="_blank" rel="noopener">Hexo瞎折腾系列(1) - 准备工作与简单美化</a></li><li><a href="https://blog.csdn.net/panchao888888/article/details/80666352#jump6" target="_blank" rel="noopener">Hexo博客NexT主题终极配置</a></li><li><a href="http://www.cduyzh.com/img-oss/" target="_blank" rel="noopener">解决博客图片存储——阿里云的OSS运用</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>gitclone太慢解决方式</title>
      <link href="/post/18bf4a5.html"/>
      <url>/post/18bf4a5.html</url>
      <content type="html"><![CDATA[<h2 id="git-clone太慢解决方式"><a href="#git-clone太慢解决方式" class="headerlink" title="git clone太慢解决方式"></a>git clone太慢解决方式</h2><p>这里的处理方式是通过ss代理，亲测有效。之前clone只有几k的速度，现在能达到接近100了。<br><a id="more"></a></p><ol><li>首先得有ss</li><li>git设置scocks5代理</li></ol><blockquote><p>git config –global http.proxy ‘socks5://127.0.0.1:1080’</p></blockquote><blockquote><p>git config –global https.proxy ‘socks5://127.0.0.1:1080’</p></blockquote><ol start="3"><li>修改hosts文件，在hosts文件中添加</li></ol><blockquote><p>192.30.253.113    github.com</p></blockquote><blockquote><p>151.101.72.249    github.global.ssl.fastly.net</p></blockquote><ol start="4"><li>刷新dns缓存 mac刷新dns缓存命令：<code>dscacheutil -flushcache</code>,windows刷新dns缓存命令：<code>ipconfig /flushdns</code></li></ol><blockquote><p>sudo dscacheutil -flushcache</p></blockquote><p>这里如果没有ss ，可以忽略1.2步，但是没有测试过</p>]]></content>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pm2进程管理器－常用命令</title>
      <link href="/post/a7034c26.html"/>
      <url>/post/a7034c26.html</url>
      <content type="html"><![CDATA[<h3 id="pm2"><a href="#pm2" class="headerlink" title="pm2"></a><a href="http://pm2.keymetrics.io/" target="_blank" rel="noopener">pm2</a></h3><ul><li>Advanced, production process manager for Node.js</li></ul><hr><hr><a id="more"></a><p>pm2 是一个带有负载均衡功能的Node应用的进程管理器.当你要把你的独立代码利用全部的服务器上的所有CPU,并保证进程永远都活着,0秒的重载, PM2是完美的,下面我们来看pm2常用的命令用法介绍吧。</p><p>PM2 （github上的源码）是开源的基于Nodejs的进程管理器，包括守护进程，监控，日志的一整套完整的功能，基本是Nodejs应用程序不二的守护进程选择，事实上它并不仅仅可以启动Nodejs的程序，只要是一般的脚本的程序它同样可以胜任。</p><p>以下是pm2常用的命令行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js              <span class="comment"># 启动app.js应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js -i 4         <span class="comment"># cluster mode 模式启动4个app.js的应用实例     # 4个应用程序会自动进行负载均衡</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js --name=<span class="string">"api"</span> <span class="comment"># 启动应用程序并命名为 "api"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js --watch      <span class="comment"># 当文件变化时自动重启应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start script.sh           <span class="comment"># 启动 bash 脚本</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 list                      <span class="comment"># 列表 PM2 启动的所有的应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 monit                     <span class="comment"># 显示每个应用程序的CPU和内存占用情况</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 show [app-name]           <span class="comment"># 显示应用程序的所有信息</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 logs                      <span class="comment"># 显示所有应用程序的日志</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 logs [app-name]           <span class="comment"># 显示指定应用程序的日志</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 flush</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 stop all                  <span class="comment"># 停止所有的应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 stop 0                    <span class="comment"># 停止 id为 0的指定应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 restart all               <span class="comment"># 重启所有应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 reload all                <span class="comment"># 重启 cluster mode下的所有应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 gracefulReload all        <span class="comment"># Graceful reload all apps in cluster mode</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 delete all                <span class="comment"># 关闭并删除所有应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 delete 0                  <span class="comment"># 删除指定应用 id 0</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 scale api 10              <span class="comment"># 把名字叫api的应用扩展到10个实例</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 reset [app-name]          <span class="comment"># 重置重启数量</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 startup                   <span class="comment"># 创建开机自启动命令</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 save                      <span class="comment"># 保存当前应用列表</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 resurrect                 <span class="comment"># 重新加载保存的应用列表</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 update                    <span class="comment"># Save processes, kill PM2 and restore processes</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 generate                  <span class="comment"># Generate a sample json configuration file</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 deploy app.json prod setup    <span class="comment"># Setup "prod" remote server</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 deploy app.json prod          <span class="comment"># Update "prod" remote server</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 deploy app.json prod revert 2 <span class="comment"># Revert "prod" remote server by 2</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 module:generate [name]    <span class="comment"># Generate sample module with name [name]</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 install pm2-logrotate     <span class="comment"># Install module (here a log rotation system)</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 uninstall pm2-logrotate   <span class="comment"># Uninstall module</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 publish                   <span class="comment"># Increment version, git push and npm publish</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Linux常用命令整理</title>
      <link href="/post/f42d2759.html"/>
      <url>/post/f42d2759.html</url>
      <content type="html"><![CDATA[<h3 id="Linux常用命令整"><a href="#Linux常用命令整" class="headerlink" title="Linux常用命令整"></a>Linux常用命令整</h3><p>很多命令没有经常用就忘了，记一下。<br><a id="more"></a></p><h4 id="文件、目录类"><a href="#文件、目录类" class="headerlink" title="文件、目录类"></a>文件、目录类</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span># 返回 home 目录（相当于<span class="keyword">cd</span> ~）</span><br><span class="line"></span><br><span class="line"><span class="keyword">cd</span> .# 返回上一级目录</span><br><span class="line"></span><br><span class="line"><span class="keyword">cd</span> -# 返回上一次所在目录,并显示其目录名</span><br><span class="line"></span><br><span class="line"><span class="keyword">cd</span> xxx# 进入到指定目录xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">pwd</span># 显示当前目录的绝对路径</span><br><span class="line"></span><br><span class="line"><span class="keyword">ls</span> -<span class="keyword">l</span># 列出文件的详细信息，相当于（ll）</span><br><span class="line"></span><br><span class="line"><span class="keyword">ls</span> | grep <span class="string">"xxx"</span># 列出包含 <span class="string">"xxx"</span> 关键字的文件</span><br><span class="line"></span><br><span class="line"><span class="keyword">mkdir</span> <span class="keyword">dir</span># 创建一个目录</span><br><span class="line"></span><br><span class="line"><span class="keyword">mkdir</span> -p <span class="keyword">dir</span>/<span class="keyword">dir</span># 创建多级目录</span><br><span class="line"></span><br><span class="line"><span class="keyword">mkdir</span> -<span class="keyword">m</span> 777 <span class="keyword">dir</span># 创建权限为 777 的目录</span><br><span class="line"></span><br><span class="line">touch <span class="keyword">file</span># 创建新的空文件</span><br><span class="line"></span><br><span class="line"><span class="keyword">rmdir</span> <span class="keyword">dir</span># 删除空目录</span><br><span class="line"></span><br><span class="line"><span class="keyword">rmdir</span> -p <span class="keyword">dir</span>/bin# 删除子空目录 bin 和其父空目录 <span class="keyword">dir</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">rm</span> -rf <span class="keyword">dir</span>/bin# 删除一个目录中的一个或多个文件或目录（慎用）</span><br><span class="line"></span><br><span class="line"><span class="keyword">rm</span> -rf xxx *.lo# 删除当前目录下所有 <span class="string">".log"</span> 的文件（慎用）</span><br><span class="line"></span><br><span class="line">find fileName -name  *.txt | xargs <span class="keyword">rm</span> -rf# 将查找出来的文件全部删除（慎用）</span><br><span class="line"></span><br><span class="line">cp <span class="keyword">file</span> <span class="keyword">dir</span>/<span class="keyword">file</span># 将文件拷贝到另一文件中</span><br><span class="line"></span><br><span class="line">cp -R dir1 dir2# 拷贝多个目录 (含子目录) 到指定目录</span><br><span class="line"></span><br><span class="line">mv dir1 dir2# 将文件或目录重新命名,或者将文件从一个目录移到另一个目录中</span><br></pre></td></tr></table></figure><h4 id="文件查看、处理"><a href="#文件查看、处理" class="headerlink" title="文件查看、处理"></a>文件查看、处理</h4><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="built_in">file</span><span class="comment"># 显示文件的内容</span></span><br><span class="line"></span><br><span class="line">cat -n <span class="built_in">file</span><span class="comment"># 显示文件的行数编号</span></span><br><span class="line"></span><br><span class="line">cat file1 file2 &gt; file3<span class="comment"># 将文件 file1 和 file2 的内容合并之后放入 新文件 file3 中</span></span><br><span class="line"></span><br><span class="line">head <span class="built_in">file</span><span class="comment"># 显示文件的头 10 行内容</span></span><br><span class="line"></span><br><span class="line">tail <span class="built_in">file</span><span class="comment"># 显示文件的最后 10 行内容  －n 20 显示20行</span></span><br><span class="line"></span><br><span class="line">tail -f <span class="built_in">file</span><span class="comment"># 显示文件最新追加的内容,并监视文件的变化,常用来跟踪日志文件</span></span><br><span class="line"></span><br><span class="line">more <span class="built_in">file</span><span class="comment"># 基于vi编辑器文本过滤器,它以全屏幕的方式按页显示文本文件的内容</span></span><br><span class="line"></span><br><span class="line">less <span class="built_in">file</span><span class="comment"># 作用与 more 十分类似, pageUp 向上翻页, pageDown 向下翻页, 按 q 退出</span></span><br><span class="line"></span><br><span class="line">cat file1 &gt; file2<span class="comment"># 覆盖导入</span></span><br><span class="line"></span><br><span class="line">cat file1 &gt;&gt; <span class="built_in">file</span><span class="comment"># 追加导入</span></span><br><span class="line"></span><br><span class="line">wc -l [-m][-c][-w] <span class="built_in">file</span><span class="comment"># 统计行数、字符数、字节数、单词数</span></span><br></pre></td></tr></table></figure><h4 id="文件查询、搜索"><a href="#文件查询、搜索" class="headerlink" title="文件查询、搜索"></a>文件查询、搜索</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grep</span> keyWord# 与 <span class="keyword">cat</span> 或者其他命令搭配使用 <span class="keyword">cat</span> <span class="keyword">file</span> | <span class="keyword">grep</span> keyWord</span><br><span class="line"></span><br><span class="line"><span class="keyword">find</span> dir -name <span class="string">"*.log"</span>搜索指定目录下的后缀为 .<span class="built_in">log</span> 的文件</span><br><span class="line"></span><br><span class="line"><span class="keyword">find</span> dir -name <span class="string">"*.log"</span> -<span class="keyword">o</span> -name <span class="string">"*.pid"</span># 搜索指定目录下的 <span class="string">".log"</span> 文件和 <span class="string">".pid"</span> 文件</span><br><span class="line"></span><br><span class="line"><span class="keyword">find</span> dir -user user1# 搜索指定目录下属于 user1 用户的文件</span><br></pre></td></tr></table></figure><h4 id="文本编辑-vi-vim-底行模式下"><a href="#文本编辑-vi-vim-底行模式下" class="headerlink" title="文本编辑 vi / vim 底行模式下"></a>文本编辑 vi / vim 底行模式下</h4><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:set</span> nu<span class="comment"># 显示行号</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">:set</span> nonu<span class="comment"># 不显示行号</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">:n</span><span class="comment"># 跳转到指定第 n 行</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">:w</span> file<span class="comment"># 另存为</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">:n1</span>,n2 s/str1/str2/g<span class="comment"># 从 n1 行到 n2 行, 将 str1 替换为 str2（从开头到结束 1,$ s/str1/str2/g）</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">:wq</span><span class="comment"># 保存并退出</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">:q!</span><span class="comment"># 强制退出不保存</span></span><br></pre></td></tr></table></figure><h4 id="文本编辑-vi-vim-命令模式下"><a href="#文本编辑-vi-vim-命令模式下" class="headerlink" title="文本编辑 vi / vim 命令模式下"></a>文本编辑 vi / vim 命令模式下</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">G</span><span class="comment"># 到末行（Shift + g）</span></span><br><span class="line"></span><br><span class="line">gg<span class="comment"># 到首行</span></span><br><span class="line"></span><br><span class="line">dd<span class="comment"># 删除行或剪切行</span></span><br><span class="line"></span><br><span class="line">u<span class="comment"># 撤销</span></span><br><span class="line"></span><br><span class="line">y<span class="comment"># 在使用 v 模式选定了某一块的时候，复制选定块到缓冲区用</span></span><br><span class="line"></span><br><span class="line">yw<span class="comment"># 复制一个word （nyw或者ynw，复制n个word，n为数字）</span></span><br><span class="line"></span><br><span class="line">yy<span class="comment"># 复制一行</span></span><br><span class="line"></span><br><span class="line">nyy<span class="comment"># 向下复制 n 行</span></span><br><span class="line"></span><br><span class="line">p<span class="comment"># 粘贴</span></span><br></pre></td></tr></table></figure><h4 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 dir/file# 修改指定文件、文件夹的权限</span><br><span class="line"></span><br><span class="line">chmod -R 755 dir# 递归修改目录及其子文件、目录的权限</span><br><span class="line"></span><br><span class="line">chown<span class="built_in"> user </span>file# 改变文件的所有者</span><br><span class="line"></span><br><span class="line">chown -R<span class="built_in"> user </span>dir# 改变目录的所有者</span><br><span class="line"></span><br><span class="line">chgrp group1 file# 改变文件的所有者</span><br><span class="line"></span><br><span class="line">chgrp -R group1 dir# 改变目录的所属组</span><br><span class="line"></span><br><span class="line">chown user1:group1 file# 同时改变文件的所有者和所属组</span><br><span class="line"></span><br><span class="line">chown -R user1:group1 dir# 同时改变目录的所有者和所属组</span><br><span class="line"></span><br><span class="line">whoami# 查看当前操作用户</span><br><span class="line"></span><br><span class="line">who# 查看当前已登录系统的用户</span><br><span class="line"></span><br><span class="line">id user1# 查看用户 user1 的归属 id 信息</span><br></pre></td></tr></table></figure><h4 id="压缩、解压"><a href="#压缩、解压" class="headerlink" title="压缩、解压"></a>压缩、解压</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf <span class="keyword">test</span>.tar <span class="keyword">test</span>.<span class="keyword">log</span>                            # 仅打包,不压缩</span><br><span class="line"></span><br><span class="line">tar -xvf <span class="keyword">test</span>.tar                                         # 直接解包</span><br><span class="line"></span><br><span class="line">tar -zcvf <span class="keyword">test</span>.tar.gz <span class="keyword">test</span>.<span class="keyword">log</span>                      # 打包后,以 gzip 压缩</span><br><span class="line"></span><br><span class="line">tar -zcvf <span class="keyword">test</span>.tar.gz *                                # 将当前目录下所有文件压缩</span><br><span class="line"></span><br><span class="line">tar -zxvf <span class="keyword">test</span>.tar.gz                                  # 直接解压</span><br><span class="line"></span><br><span class="line">tar -zxvf <span class="keyword">test</span>.tar.gz -C <span class="keyword">dir</span>                        # 解压到新目录,只能是 <span class="keyword">dir</span> 且已经存在</span><br><span class="line"></span><br><span class="line"><span class="keyword">zip</span> <span class="keyword">test</span>.<span class="keyword">zip</span> *                                            # 将当前目录下所有文件压缩为 <span class="keyword">zip</span> 包</span><br><span class="line"></span><br><span class="line">unzip <span class="keyword">test</span>.<span class="keyword">zip</span>                                          # 解压缩 <span class="keyword">zip</span> 包</span><br></pre></td></tr></table></figure><h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">groupadd group1                                    <span class="meta"># 创建用户组</span></span><br><span class="line"></span><br><span class="line">groupdel group1                                     <span class="meta"># 删除用户组</span></span><br><span class="line"></span><br><span class="line">groupmod  -n group2 group1                 <span class="meta"># 将 group1 重命名 group2</span></span><br><span class="line"></span><br><span class="line">useradd user1                                        <span class="meta"># 创建用户</span></span><br><span class="line"></span><br><span class="line">useradd -g group1 user1                        <span class="meta"># 创建 user1 并将其分配到 group1 组下</span></span><br><span class="line"></span><br><span class="line">userdel -r user1                                      <span class="meta"># 删除 user1, <span class="string">"-r"</span> 参数表示同时也删除 home 目录下的相关目录</span></span><br><span class="line"></span><br><span class="line">usermod -g group2 user1                       <span class="meta"># 改变 user1 的组为 group2</span></span><br><span class="line"></span><br><span class="line">usermod -G group2 user1                      <span class="meta"># 将 user1 的添加到 group2 组中来，同时保留原来的主组</span></span><br><span class="line"></span><br><span class="line">passwd                                                   <span class="meta"># 修改当前用户密码</span></span><br><span class="line"></span><br><span class="line">passwd user1                                         <span class="meta"># 修改 user1 用户的密码，仅限 root 用户执行</span></span><br><span class="line"></span><br><span class="line">su user1                                                 <span class="meta"># 切换到用户 user1</span></span><br><span class="line"></span><br><span class="line">groups user1                                          <span class="meta"># 查看用户 user1 所属的组</span></span><br></pre></td></tr></table></figure><h4 id="查看命令帮助"><a href="#查看命令帮助" class="headerlink" title="查看命令帮助"></a>查看命令帮助</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">help</span> <span class="keyword">cd</span>                                                   # 用于内部命令, 如 <span class="keyword">exit</span>、<span class="keyword">history</span>、<span class="keyword">cd</span>、<span class="keyword">echo</span> 等常驻内存</span><br><span class="line"></span><br><span class="line"><span class="keyword">ls</span> --<span class="keyword">help</span>                                                  # 主要用于外部命令,可通过 <span class="string">"echo $PATH"</span> 命令查看外部命令的存储路径,如 <span class="keyword">ls</span>,<span class="keyword">vi</span> 等</span><br><span class="line"></span><br><span class="line">man <span class="keyword">ls</span>                                                    # 命令手册,可用于所有命令,输入<span class="string">"q"</span>可退出</span><br><span class="line"></span><br><span class="line"><span class="built_in">type</span> <span class="keyword">cd</span>                                                   # 查看命令类型,内部 <span class="built_in">or</span> 外部及命令位置</span><br></pre></td></tr></table></figure><h4 id="系统相关命令"><a href="#系统相关命令" class="headerlink" title="系统相关命令"></a>系统相关命令</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">shutdown  -h now                                  <span class="comment"># 立即关机</span></span><br><span class="line"></span><br><span class="line">shutdown  -r now                                  <span class="comment"># 立即重启</span></span><br><span class="line"></span><br><span class="line">uname -r                                               <span class="comment"># 查看内核版本</span></span><br><span class="line"></span><br><span class="line">cal  nbsp;                                                       <span class="comment"># 日历</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">date</span>                                                       <span class="comment"># 时间、日期</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">"2015-12-22 08:00"</span>                   <span class="comment"># 修改时间</span></span><br><span class="line"></span><br><span class="line">ntpdate <span class="built_in">time</span>.nist.gov                             <span class="comment"># 同步当前时间</span></span><br><span class="line"></span><br><span class="line">history                                                   <span class="comment"># 查看历史命令记录,运行时 "!"+ 命令号,如 !123 运行 编号为 123 的命令</span></span><br><span class="line"></span><br><span class="line">ps -ef                                                     <span class="comment"># 查看进程</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> pid                                                    <span class="comment"># 终止进程</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> <span class="number">-9</span> pid                                                <span class="comment"># 强制终止进程</span></span><br><span class="line"></span><br><span class="line">top                                                         <span class="comment"># 查看当前系统资源使用率</span></span><br><span class="line"></span><br><span class="line">df -h                                                       <span class="comment"># 查看磁盘信息</span></span><br><span class="line"></span><br><span class="line">free -m                                                  <span class="comment"># 查看内存信息</span></span><br><span class="line"></span><br><span class="line">du -h <span class="built_in">file</span>/dir                                           <span class="comment"># 查看单个文件/目录大小 -h 表示以 K,M,G</span></span><br><span class="line"></span><br><span class="line">du -sh <span class="built_in">file</span>/dir                                         <span class="comment"># 查看文件/目录总大小</span></span><br><span class="line"></span><br><span class="line">mount -o loop linux.iso /mnt/dir             <span class="comment"># 加载文件系统到指定的加载点</span></span><br><span class="line"></span><br><span class="line">umount /mnt/dir                                     <span class="comment"># 卸载已经加载的文件系统</span></span><br><span class="line"></span><br><span class="line">rpm -ivh xxx.rpm                                    <span class="comment"># 安装 rpm 包</span></span><br><span class="line"></span><br><span class="line">rpm -e xxx.rpm                                      <span class="comment"># 卸载 rpm 包</span></span><br><span class="line"></span><br><span class="line">yum install xxx                                       <span class="comment"># 安装安装包xxx</span></span><br><span class="line"></span><br><span class="line">yum remove xxx                                    <span class="comment"># 删除已安装的xxx</span></span><br><span class="line"></span><br><span class="line">wget <span class="keyword">http</span>://xxxx                                     <span class="comment"># 下载远端 zip 包</span></span><br><span class="line"></span><br><span class="line">echo <span class="string">''</span> &gt; xxx                                         <span class="comment"># 清空xxx文件内容</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>

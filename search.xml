<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hexo使用入门</title>
      <link href="/post/1476ebdb.html"/>
      <url>/post/1476ebdb.html</url>
      <content type="html"><![CDATA[<p>Hexo博客搭建的基础大致流程为： </p><ul><li>安装Node.js → 安装Hexo → 本地测试运行 → 安装及配置主题 →安装Git → 注册github与coding并创建pages仓库 → 部署 </li><li>Node.js和git的安装大家自己去网上搜下，相关的文章很多<a id="more"></a><h2 id="Hexo安装和配置"><a href="#Hexo安装和配置" class="headerlink" title="Hexo安装和配置"></a>Hexo安装和配置</h2></li></ul><h4 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h4><p>在终端执行以下命令通过npm安装Hexo(这里有个前提是你的电脑node环境已经装好)</p><blockquote><p>npm install -g hexo-cli </p></blockquote><h4 id="Hexo初始化"><a href="#Hexo初始化" class="headerlink" title="Hexo初始化"></a>Hexo初始化</h4><p>Hexo安装完成后,先提前建好一个文件夹用来做我们博客项目的文件夹。比如我这里在用户主目录下建了一个hexo文件夹，里面建了一个blog文件夹。</p><p>在blog文件夹中打开终端，或者通关cd命令进入blog这个目录</p><blockquote><p>cd hexo/blog</p><p><img src="http://wdcblog.oss-cn-hongkong.aliyuncs.com/blog/1.png" alt=""></p></blockquote><p>执行命令：</p><blockquote><p>hexo init        # hexo会在当前文件夹建立网站所需要的所有文件</p><p>npm install        # 安装依赖模块</p></blockquote><p>新建完成后，blog文件夹目录结构如下：</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span></span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure><p>启动hexo本地站点，并开启调试模式（即加上 –debug），整个命令是 <code>hexo s --debug</code>。 在服务启动的过程，注意观察命令行输出是否有任何异常信息，如果你碰到问题，这些信息将帮助他人更好的定位错误</p><blockquote><p>hexo s -d        # 等同于hexo server –debug，在本地服务器运行</p><p><img src="/post/1476ebdb/2.png" alt=""></p></blockquote><p>然后打开浏览器输入<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000</a>。可以看到如下界面：<br><img src="/post/1476ebdb/3.png" alt=""></p><h4 id="新建页面和文章"><a href="#新建页面和文章" class="headerlink" title="新建页面和文章"></a>新建页面和文章</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"title"</span>  # 生成新文章：\source\_posts\title.md</span><br><span class="line">hexo new<span class="built_in"> page </span><span class="string">"title"</span>  # 生成新的页面，后面可在主题配置文件中配置页面</span><br></pre></td></tr></table></figure><p>生成文章或页面的模板放在博客文件夹根目录下的 scaffolds/ 文件夹里面，文章对应的是 post.md ，页面对应的是page.md，草稿的是draft.md</p><h4 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h4><p>打开新建的文章\source_posts\postName.md，其中postName是hexo new “title”中的title</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">postName</span>  <span class="comment"># 文章页面上的显示名称，可以任意修改，不会出现在URL中</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-8</span><span class="bullet">-6</span> <span class="number">23</span><span class="string">:49:28</span>  <span class="comment"># 文章生成时间，一般不改</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">diary</span>  <span class="comment"># 文章分类目录，多个分类使用[a,b,c]这种格式</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">[Hexo,diary]</span>  <span class="comment"># 文章标签</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment">#这里开始使用markdown格式输入你的正文。</span></span><br><span class="line"><span class="string">&lt;!--more--&gt;</span> </span><br><span class="line"><span class="comment">#more标签以下的内容要点击“阅读全文”才能看见，#more标签以上的内容为你首页显示文章的摘要部分</span></span><br></pre></td></tr></table></figure><h4 id="MD文章编辑"><a href="#MD文章编辑" class="headerlink" title="MD文章编辑"></a>MD文章编辑</h4><p>如果你对MD语法不熟悉，推荐你去马克飞象使用它的在线网页编辑，可以实现一边打字一边查看效果，很方便。<br>地址：<a href="https://maxiang.io/" target="_blank" rel="noopener">https://maxiang.io/</a><br>我这里用的mac的MacDown编辑，类似的软件还有 Mou 、Typora</p><p>到这里hexo就算是安装好了，接下来就是一些详细的配置了。</p><h4 id="常用命令总结"><a href="#常用命令总结" class="headerlink" title="常用命令总结"></a>常用命令总结</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder] # 初始化一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站</span><br><span class="line">hexo new [layout] &lt;title&gt; # 新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来</span><br><span class="line">hexo version # 查看版本</span><br><span class="line">hexo clean # 清除缓存文件 (db.json) 和已生成的静态文件 (public)</span><br><span class="line">hexo g # 等于hexo generate # 生成静态文件</span><br><span class="line">hexo s # 等于hexo server # 本地预览</span><br><span class="line">hexo d # 等于hexo deploy # 部署，可与hexo g合并为 hexo d -g</span><br></pre></td></tr></table></figure><hr><h4 id="博文插入图片"><a href="#博文插入图片" class="headerlink" title="博文插入图片"></a>博文插入图片</h4><p>参考文章：<a href="https://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="noopener">hexo博客图片问题</a></p><p>1.首先确认站点配置文件_config.yml 中有 post_asset_folder:true。<br>Hexo 提供了一种更方便管理 Asset 的设定：post_asset_folder<br>当您设置post_asset_folder为true参数后，在建立文件时，Hexo<br>会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。<br><img src="/post/1476ebdb/4.png" alt=""></p><p>2.在hexo的目录下执行<code>npm install hexo-asset-image --save</code></p><p>3.完成安装后用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。图片就可以放在文件夹下面。</p><p>比如我这里新建一篇文章 执行：<code>hexo new &quot;Hexo使用入门&quot;</code> 就会在我的source/_posts目录下生成 <em>Hexo使用入门.md</em> 文件 和 <em>Hexo使用入门</em> 文件夹，将我们这篇文章要用到的图片放入该文件夹就行了</p><p><img src="/post/1476ebdb/5.png" alt=""></p><p>需要引入某张图片，就这样写 <strong><code>![](Hexo使用入门/5.png)</code></strong></p><p>这里有一个<em>坑</em>，如果同时使用了<code>hexo-abbrlink</code>插件做了链接持久化的话,引用图片就需要这样写：<code>{% asset_img slug [title] %}</code> , 比如上面的引用5.png，就写成</p><blockquote>{% asset_img 5.png %}</blockquote><hr><h2 id="Hexo-Next主题安装与配置"><a href="#Hexo-Next主题安装与配置" class="headerlink" title="Hexo Next主题安装与配置"></a><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Hexo Next主题安装与配置</a></h2><p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p><blockquote><p>git clone <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a> themes/next</p></blockquote><p>编辑站点配置文件 _config.yml ，找到 theme 字段，并将其值更改为 next。</p><blockquote><p>theme: next    # 当前主题名称。值为false时禁用主题</p></blockquote><p>这里如果<code>git clone</code>太慢的话，可以看看 <a href="18bf4a5.html">git clone太慢解决方式</a></p><p>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好先使用 <code>hexo clean</code> 来清除 Hexo 的缓存。</p><h3 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h3><hr><h4 id="选择-Scheme"><a href="#选择-Scheme" class="headerlink" title="选择 Scheme"></a>选择 Scheme</h4><p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 NexT 支持三种 Scheme，他们是：</p><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><p>Scheme 的切换通过更改 <strong>主题配置</strong> 文件<code>themes/next/_config.yml</code>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。</p><hr><h4 id="设置站点首页不显示文章全文"><a href="#设置站点首页不显示文章全文" class="headerlink" title="设置站点首页不显示文章全文"></a>设置站点首页不显示文章全文</h4><p>打开 <strong>主题配置文件</strong> _config.yml 文件，注意不是站点配置文件，该文件在对应主题文件夹下。找到如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use <span class="comment">&lt;!-- more --&gt;</span> in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true#默认为false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure><p>把这里的false改为true就可以了在首页启动显示文章预览了，length是显示预览的长度。</p><p>这里我们可以通过在文章使用<!-- more -->标志来精确控制文章的摘要预览，比如这篇文章就是在这个段落的末尾添加了该标志，所以本文在首页的预览就会显示到这个段落为止。 </p><p>强烈推荐使用该<!-- more -->标志来控制文章的摘要预览，因为这种方式可以让摘要也按照css文件中的样式来渲染。如果使用了自动摘要的功能，你会发现文章摘要是一大团没有样式的文本，很是难看。</p><h5 id="其他的文章配置"><a href="#其他的文章配置" class="headerlink" title="其他的文章配置"></a>其他的文章配置</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Post Settings</span></span><br><span class="line"><span class="comment"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></span><br><span class="line"><span class="comment"># 自动将页面滚动到&lt;!-- more --&gt;标记下的地方。</span></span><br><span class="line"><span class="attr">scroll_to_more:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically saving scroll position on each post/page in cookies.</span></span><br><span class="line"><span class="comment"># 自动保存每篇文章或页面上一次滚动的地方。</span></span><br><span class="line"><span class="attr">save_scroll:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="comment"># 自动在首页对文章进行摘要描述作为前言文本。</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Automatically Excerpt. Not recommend.</span></span><br><span class="line"><span class="comment"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="comment"># 不推荐使用自动摘要。</span></span><br><span class="line"><span class="comment"># 请在文章中使用&lt;!-- more --&gt;标志来精确控制摘要长度。</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post meta display settings</span></span><br><span class="line"><span class="comment"># 文章元数据展示设置</span></span><br><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="comment"># 文本显示</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 创建时间</span></span><br><span class="line"><span class="attr">  created_at:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 更新时间</span></span><br><span class="line">  <span class="comment"># 这个更新时间有点问题，因为每次重新生成文章/部署时都会刷新更新时间，不建议使用</span></span><br><span class="line"><span class="attr">  updated_at:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># 目录分类</span></span><br><span class="line"><span class="attr">  categories:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Post wordcount display settings</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/willin/hexo-wordcount</span></span><br><span class="line"><span class="comment"># 文章字数展示设置</span></span><br><span class="line"><span class="comment"># 显示统计字数和估计阅读时长</span></span><br><span class="line"><span class="comment"># 注意：这个要安装插件，先进入站点文件夹根目录</span></span><br><span class="line"><span class="comment"># 然后：npm install hexo-wordcount --save</span></span><br><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line">  <span class="comment"># 文本显示</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 文章字数统计</span></span><br><span class="line"><span class="attr">  wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 阅读时长</span></span><br><span class="line"><span class="attr">  min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 站点总字数统计</span></span><br><span class="line"><span class="attr">  totalcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 该post_wordcount的所有设置另起一行显示</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>上面的字数统计和估计阅读时长需要安装<code>hexo-wordcount</code>插件，执行</p><blockquote><p>npm install hexo-wordcount –save</p></blockquote><hr><h4 id="添加链接持久化"><a href="#添加链接持久化" class="headerlink" title="添加链接持久化"></a>添加链接持久化</h4><p>hexo默认的链接是<a href="http://xxx.yy.com/2013/07/14/hello-world这种类型的，这源于站点配置文件_config.yml里的配置:permalink" target="_blank" rel="noopener">http://xxx.yy.com/2013/07/14/hello-world这种类型的，这源于站点配置文件_config.yml里的配置:permalink</a>: :year/:month/:day/:title/.这种默认配置的缺点就是当我们创建的博文名包含中文的名的时候，url链接地址经常会变成一串很长的难以理解的字符串，不利于博文的链接分享，以及搜索引擎搜索，另外就是年月日都会有分隔符。我们可以让url链接持久化来解决这个问。</p><ol><li><p>安装<code>hexo-abbrlink</code>插件</p><blockquote><p>npm install hexo-abbrlink –save</p></blockquote></li><li><p>修改<strong>站点配置文件</strong> _config.yml</p><ul><li><p>permalink: post/:abbrlink.html</p></li><li><p>添加 abbrlink:</p></li></ul></li></ol><pre><code>permalink: post/:abbrlink.html  # :year/:month/:day/:title/     # 文章的永久链接格式permalink_defaults:     # 永久链接中个部分的默认值# abbrlink config 需安装插件hexo-abbrlinkabbrlink:  alg: crc32  # 算法： crc16(default) and crc32  rep: hex    # 进制： dec(default) and hex</code></pre><hr><hr><p>还有一些修改没写。留着有时间再来写吧。。。<br>添加百度统计，添加阅读次数、codingpage、分享按钮、来必应评论、阿里云oss图片云储存\<br>同步到Github，域名解析</p><hr><p>参考链接：</p><ul><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网</a> 写得很详细</li><li><a href="https://reuixiy.github.io/technology/computer/computer-aided-art/2017/06/09/hexo-next-optimization.html" target="_blank" rel="noopener">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a></li><li><a href="http://www.cduyzh.com/hexo-settings-1/" target="_blank" rel="noopener">2017年最新基于hexo搭建个人免费博客——从零开始</a></li><li><a href="https://blog.csdn.net/lewky_liu/article/details/81149069" target="_blank" rel="noopener">Hexo瞎折腾系列(1) - 准备工作与简单美化</a></li><li><a href="https://blog.csdn.net/panchao888888/article/details/80666352#jump6" target="_blank" rel="noopener">Hexo博客NexT主题终极配置</a></li><li><a href="http://www.cduyzh.com/img-oss/" target="_blank" rel="noopener">解决博客图片存储——阿里云的OSS运用</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>gitclone太慢解决方式</title>
      <link href="/post/18bf4a5.html"/>
      <url>/post/18bf4a5.html</url>
      <content type="html"><![CDATA[<h2 id="git-clone太慢解决方式"><a href="#git-clone太慢解决方式" class="headerlink" title="git clone太慢解决方式"></a>git clone太慢解决方式</h2><p>这里的处理方式是通过ss代理，亲测有效。之前clone只有几k的速度，现在能达到接近100了。<br><a id="more"></a></p><ol><li>首先得有ss</li><li>git设置scocks5代理</li></ol><blockquote><p>git config –global http.proxy ‘socks5://127.0.0.1:1080’</p></blockquote><blockquote><p>git config –global https.proxy ‘socks5://127.0.0.1:1080’</p></blockquote><ol start="3"><li>修改hosts文件，在hosts文件中添加</li></ol><blockquote><p>192.30.253.113    github.com</p></blockquote><blockquote><p>151.101.72.249    github.global.ssl.fastly.net</p></blockquote><ol start="4"><li>刷新dns缓存 mac刷新dns缓存命令：<code>dscacheutil -flushcache</code>,windows刷新dns缓存命令：<code>ipconfig /flushdns</code></li></ol><blockquote><p>sudo dscacheutil -flushcache</p></blockquote><p>这里如果没有ss ，可以忽略1.2步，但是没有测试过</p>]]></content>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pm2进程管理器－常用命令</title>
      <link href="/post/a7034c26.html"/>
      <url>/post/a7034c26.html</url>
      <content type="html"><![CDATA[<h3 id="pm2"><a href="#pm2" class="headerlink" title="pm2"></a><a href="http://pm2.keymetrics.io/" target="_blank" rel="noopener">pm2</a></h3><ul><li>Advanced, production process manager for Node.js</li></ul><hr><hr><a id="more"></a><p>pm2 是一个带有负载均衡功能的Node应用的进程管理器.当你要把你的独立代码利用全部的服务器上的所有CPU,并保证进程永远都活着,0秒的重载, PM2是完美的,下面我们来看pm2常用的命令用法介绍吧。</p><p>PM2 （github上的源码）是开源的基于Nodejs的进程管理器，包括守护进程，监控，日志的一整套完整的功能，基本是Nodejs应用程序不二的守护进程选择，事实上它并不仅仅可以启动Nodejs的程序，只要是一般的脚本的程序它同样可以胜任。</p><p>以下是pm2常用的命令行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js              <span class="comment"># 启动app.js应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js -i 4         <span class="comment"># cluster mode 模式启动4个app.js的应用实例     # 4个应用程序会自动进行负载均衡</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js --name=<span class="string">"api"</span> <span class="comment"># 启动应用程序并命名为 "api"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start app.js --watch      <span class="comment"># 当文件变化时自动重启应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 start script.sh           <span class="comment"># 启动 bash 脚本</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 list                      <span class="comment"># 列表 PM2 启动的所有的应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 monit                     <span class="comment"># 显示每个应用程序的CPU和内存占用情况</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 show [app-name]           <span class="comment"># 显示应用程序的所有信息</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 logs                      <span class="comment"># 显示所有应用程序的日志</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 logs [app-name]           <span class="comment"># 显示指定应用程序的日志</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 flush</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 stop all                  <span class="comment"># 停止所有的应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 stop 0                    <span class="comment"># 停止 id为 0的指定应用程序</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 restart all               <span class="comment"># 重启所有应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 reload all                <span class="comment"># 重启 cluster mode下的所有应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 gracefulReload all        <span class="comment"># Graceful reload all apps in cluster mode</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 delete all                <span class="comment"># 关闭并删除所有应用</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 delete 0                  <span class="comment"># 删除指定应用 id 0</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 scale api 10              <span class="comment"># 把名字叫api的应用扩展到10个实例</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 reset [app-name]          <span class="comment"># 重置重启数量</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 startup                   <span class="comment"># 创建开机自启动命令</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 save                      <span class="comment"># 保存当前应用列表</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 resurrect                 <span class="comment"># 重新加载保存的应用列表</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 update                    <span class="comment"># Save processes, kill PM2 and restore processes</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 generate                  <span class="comment"># Generate a sample json configuration file</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 deploy app.json prod setup    <span class="comment"># Setup "prod" remote server</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 deploy app.json prod          <span class="comment"># Update "prod" remote server</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 deploy app.json prod revert 2 <span class="comment"># Revert "prod" remote server by 2</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 module:generate [name]    <span class="comment"># Generate sample module with name [name]</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 install pm2-logrotate     <span class="comment"># Install module (here a log rotation system)</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 uninstall pm2-logrotate   <span class="comment"># Uninstall module</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> pm2 publish                   <span class="comment"># Increment version, git push and npm publish</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
